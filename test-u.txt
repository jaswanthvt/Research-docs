### End-to-end process (repeat, concise)

- 1) Online machine: prepare IPA files
  - If you already have them:
    ```bash
    mkdir -p /Users/My_Folder/Codes/metal-kube/zarf/artifacts
    cp ~/ipa/ironic-python-agent.kernel /Users/My_Folder/Codes/metal-kube/zarf/artifacts/ironic-python-agent.kernel
    cp ~/ipa/ironic-python-agent.initramfs /Users/My_Folder/Codes/metal-kube/zarf/artifacts/ironic-python-agent.initramfs
    chmod 0644 /Users/My_Folder/Codes/metal-kube/zarf/artifacts/ironic-python-agent.kernel /Users/My_Folder/Codes/metal-kube/zarf/artifacts/ironic-python-agent.initramfs
    ```
  - Or download fresh:
    ```bash
    mkdir -p ~/ipa && cd ~/ipa
    curl -L -o ironic-python-agent.kernel https://images.rdoproject.org/current-tripleo/ironic-python-agent.kernel
    curl -L -o ironic-python-agent.initramfs https://images.rdoproject.org/current-tripleo/ironic-python-agent.initramfs
    cp ironic-python-agent.kernel /Users/My_Folder/Codes/metal-kube/zarf/artifacts/ironic-python-agent.kernel
    cp ironic-python-agent.initramfs /Users/My_Folder/Codes/metal-kube/zarf/artifacts/ironic-python-agent.initramfs
    chmod 0644 /Users/My_Folder/Codes/metal-kube/zarf/artifacts/ironic-python-agent.kernel /Users/My_Folder/Codes/metal-kube/zarf/artifacts/ironic-python-agent.initramfs
    ```

- 2) Online machine: build Zarf packages
  ```bash
  /Users/My_Folder/Codes/metal-kube/zarf/scripts/online_build.sh /Users/My_Folder/Codes/metal-kube/zarf/config.sh
  ls -1 /Users/My_Folder/Codes/metal-kube/zarf/zarf-packages/zarf-package-metal3-*.tar.zst
  ```
  - Package YAMLs are written to `zarf/zarf-packages/`:
    - `zarf-bmo.yaml`
    - `zarf-ironic.yaml`
  - Archives to transfer:
    - `zarf-package-metal3-bmo-*.tar.zst`
    - `zarf-package-metal3-ironic-*.tar.zst`

- 3) Move packages to air‑gapped control node
  - Copy both `.tar.zst` files from `zarf/zarf-packages/` to the node.

- 4) Air‑gapped control node: set target node and deploy
  ```bash
  # choose a node to host IPA files
  kubectl get nodes -o name

  # set the node name in config
  sed -i.bak 's/^export IPA_NODE_NAME=.*/export IPA_NODE_NAME="<YOUR_NODE_NAME>"/' /Users/My_Folder/Codes/metal-kube/zarf/config.sh

  # deploy (also initializes Zarf registry if needed)
  /Users/My_Folder/Codes/metal-kube/zarf/scripts/airgap_deploy.sh /Users/My_Folder/Codes/metal-kube/zarf/config.sh
  ```

- 5) Verify
  ```bash
  kubectl -n metal3 get deploy baremetal-operator-controller-manager
  kubectl -n metal3 get pods
  kubectl -n metal3 get svc ipa-server
  kubectl get crds | grep baremetalhost
  kubectl -n metal3 get deploy ironic-ipa-downloader -o jsonpath='{.spec.template.spec.containers[0].env}' | grep IPA_BASEURI
  ```

Want me to run verification commands on your air‑gapped node once you’ve deployed?
